name: CyanogenMod Building CI

on:
  workflow_dispatch:

jobs:
  build:
    name: CM Building CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]

    env:
      OEM: samsung
      DEVICE: j1pop3g

    steps:
    - uses: actions/checkout@v3
    
    # Cleanup The Actions Workspace Using Custom Composite Run Actions
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main
      # That's it! Now use your normal steps

    - name: Installing JDK 7 + Build Dependencies
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf axel gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev python
        mkdir ~/.jdk_7
        cd ~/.jdk_7
        axel -q -n $(nproc --all) https://download.java.net/openjdk/jdk7u75/ri/openjdk-7u75-b13-linux-x64-18_dec_2014.tar.gz
        tar -xzf openjdk-7u75-b13-linux-x64-18_dec_2014.tar.gz
        sudo ln -f -s /usr/bin/python2.7 /usr/bin/python
    - name: Syncing CyanogenMod sources
      run: |
        mkdir ~/TWRP
        cd ~/TWRP
        mkdir ~/.bin
        curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
        python3 ~/.bin/repo init --depth=1 -u https://github.com/LineageOS/android -b cm-14.1
        git clone https://github.com/Exynos7580/android_device_samsung_a3xeltexx -b cm-14.1 ~/TWRP/device/samsung/a3xeltexx
        git clone https://github.com/Exynos7580/android_vendor_samsung_a3xeltexx -b cm-14.1 ~/TWRP/vendor/samsung/a3xeltexx
        python3 ~/.bin/repo sync -c --force-sync --optimized-fetch --no-tags --no-clone-bundle --prune -j$(nproc --all)
    - name: Building CyanogenMod
      run: |
        OLDPATH=$PATH
        OLDJAVAHOME=$JAVA_HOME
        export PATH="$HOME/.jdk_7/java-se-7u75-ri/bin:$PATH"
        export JAVA_HOME="$HOME/.jdk_7/java-se-7u75-ri"
        cd ~/TWRP
        rm -rf ~/TWRP/build
        git clone https://github.com/Exynos7580/android_hardware_samsung_slsi_exynos7580 -b los-14.1 ~/TWRP/hardware/samsung_slsi-cm/exynos7580
        git clone https://github.com/unlegacy-devices/android_kernel_samsung_a3xelte -b cm-testing ~/TWRP/kernel/samsung/a3xelte
        git clone https://github.com/Exynos7580/android_hardware_samsung_slsi_exynos -b cm-14.1 ~/TWRP/hardware/samsung_slsi-cm/exynos
        git clone https://github.com/Exynos7580/android_hardware_samsung_slsi_openmax -b cm-14.1 ~/TWRP/hardware/samsung_slsi-cm/openmax
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        export LC_ALL=C
        lunch lineage_a3xeltexx-eng
        make -j$(nproc --all) bootimage
        export PATH=$OLDPATH
        export JAVA_HOME=$OLDJAVAHOME
    - name: Uploading CyanogenMod builds
      uses: actions/upload-artifact@v2
      with:
        name: twrp
        path: /home/runner/TWRP/out/target/product/a3xeltexx/boot.img
